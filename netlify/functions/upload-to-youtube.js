const { google } = require('googleapis');
const { createClient } = require('@supabase/supabase-js');

const supabase = createClient(
  process.env.SUPABASE_URL,
  process.env.SUPABASE_SERVICE_KEY
);

exports.handler = async (event, context) => {
  if (event.httpMethod !== 'POST') {
    return { statusCode: 405, body: 'Method Not Allowed' };
  }

  try {
    const { clipId, userId, accessToken } = JSON.parse(event.body);

    // Get clip data from database
    const { data: clip, error: clipError } = await supabase
      .from('clips')
      .select('*')
      .eq('id', clipId)
      .single();

    if (clipError || !clip) {
      throw new Error('Clip not found');
    }

    // Set up YouTube API
    const youtube = google.youtube({ version: 'v3' });
    
    // Upload to YouTube
    const uploadResponse = await youtube.videos.insert({
      auth: accessToken,
      part: ['snippet', 'status'],
      requestBody: {
        snippet: {
          title: clip.title,
          description: `Epic ${clip.game} gameplay clip! Generated by AutoStreamPro.`,
          tags: [clip.game, 'gaming', 'highlights'],
          categoryId: '20' // Gaming category
        },
        status: {
          privacyStatus: 'public'
        }
      },
      media: {
        body: clip.video_url // Stream from your video URL
      }
    });

    return {
      statusCode: 200,
      body: JSON.stringify({
        success: true,
        youtubeId: uploadResponse.data.id,
        message: 'Uploaded to YouTube successfully!'
      })
    };

  } catch (error) {
    return {
      statusCode: 500,
      body: JSON.stringify({
        success: false,
        error: error.message
      })
    };
  }
};
